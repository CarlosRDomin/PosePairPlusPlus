// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: watch_data.proto

package posepair;

public final class WatchData {
  private WatchData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface WatchDataBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:posepair.WatchDataBlock)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Watch unique id (to tell them apart)
     * </pre>
     *
     * <code>int32 watch_id = 1;</code>
     */
    int getWatchId();

    /**
     * <pre>
     * Frequency at which values were sampled
     * </pre>
     *
     * <code>float F_samp = 2;</code>
     */
    float getFSamp();

    /**
     * <pre>
     * Timestamp of the last sample in linAccel
     * </pre>
     *
     * <code>.google.protobuf.Timestamp t_latest = 3;</code>
     */
    boolean hasTLatest();
    /**
     * <pre>
     * Timestamp of the last sample in linAccel
     * </pre>
     *
     * <code>.google.protobuf.Timestamp t_latest = 3;</code>
     */
    com.google.protobuf.Timestamp getTLatest();
    /**
     * <pre>
     * Timestamp of the last sample in linAccel
     * </pre>
     *
     * <code>.google.protobuf.Timestamp t_latest = 3;</code>
     */
    com.google.protobuf.TimestampOrBuilder getTLatestOrBuilder();

    /**
     * <pre>
     * x-axis linear acceleration data
     * </pre>
     *
     * <code>repeated float linAccel_x = 4;</code>
     */
    java.util.List<java.lang.Float> getLinAccelXList();
    /**
     * <pre>
     * x-axis linear acceleration data
     * </pre>
     *
     * <code>repeated float linAccel_x = 4;</code>
     */
    int getLinAccelXCount();
    /**
     * <pre>
     * x-axis linear acceleration data
     * </pre>
     *
     * <code>repeated float linAccel_x = 4;</code>
     */
    float getLinAccelX(int index);

    /**
     * <pre>
     * y-axis linear acceleration data
     * </pre>
     *
     * <code>repeated float linAccel_y = 5;</code>
     */
    java.util.List<java.lang.Float> getLinAccelYList();
    /**
     * <pre>
     * y-axis linear acceleration data
     * </pre>
     *
     * <code>repeated float linAccel_y = 5;</code>
     */
    int getLinAccelYCount();
    /**
     * <pre>
     * y-axis linear acceleration data
     * </pre>
     *
     * <code>repeated float linAccel_y = 5;</code>
     */
    float getLinAccelY(int index);

    /**
     * <pre>
     * z-axis linear acceleration data
     * </pre>
     *
     * <code>repeated float linAccel_z = 6;</code>
     */
    java.util.List<java.lang.Float> getLinAccelZList();
    /**
     * <pre>
     * z-axis linear acceleration data
     * </pre>
     *
     * <code>repeated float linAccel_z = 6;</code>
     */
    int getLinAccelZCount();
    /**
     * <pre>
     * z-axis linear acceleration data
     * </pre>
     *
     * <code>repeated float linAccel_z = 6;</code>
     */
    float getLinAccelZ(int index);
  }
  /**
   * <pre>
   * WatchDataBlock encodes a block of sensor data from the watch, together with all relevant sensor attributes (watch ID, sampling freq, timestamp...)
   * </pre>
   *
   * Protobuf type {@code posepair.WatchDataBlock}
   */
  public  static final class WatchDataBlock extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:posepair.WatchDataBlock)
      WatchDataBlockOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WatchDataBlock.newBuilder() to construct.
    private WatchDataBlock(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WatchDataBlock() {
      watchId_ = 0;
      fSamp_ = 0F;
      linAccelX_ = java.util.Collections.emptyList();
      linAccelY_ = java.util.Collections.emptyList();
      linAccelZ_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WatchDataBlock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              watchId_ = input.readInt32();
              break;
            }
            case 21: {

              fSamp_ = input.readFloat();
              break;
            }
            case 26: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (tLatest_ != null) {
                subBuilder = tLatest_.toBuilder();
              }
              tLatest_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tLatest_);
                tLatest_ = subBuilder.buildPartial();
              }

              break;
            }
            case 37: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                linAccelX_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000008;
              }
              linAccelX_.add(input.readFloat());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                linAccelX_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                linAccelX_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 45: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                linAccelY_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000010;
              }
              linAccelY_.add(input.readFloat());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                linAccelY_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                linAccelY_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 53: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                linAccelZ_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000020;
              }
              linAccelZ_.add(input.readFloat());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                linAccelZ_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                linAccelZ_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          linAccelX_ = java.util.Collections.unmodifiableList(linAccelX_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          linAccelY_ = java.util.Collections.unmodifiableList(linAccelY_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          linAccelZ_ = java.util.Collections.unmodifiableList(linAccelZ_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return posepair.WatchData.internal_static_posepair_WatchDataBlock_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return posepair.WatchData.internal_static_posepair_WatchDataBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              posepair.WatchData.WatchDataBlock.class, posepair.WatchData.WatchDataBlock.Builder.class);
    }

    private int bitField0_;
    public static final int WATCH_ID_FIELD_NUMBER = 1;
    private int watchId_;
    /**
     * <pre>
     * Watch unique id (to tell them apart)
     * </pre>
     *
     * <code>int32 watch_id = 1;</code>
     */
    public int getWatchId() {
      return watchId_;
    }

    public static final int F_SAMP_FIELD_NUMBER = 2;
    private float fSamp_;
    /**
     * <pre>
     * Frequency at which values were sampled
     * </pre>
     *
     * <code>float F_samp = 2;</code>
     */
    public float getFSamp() {
      return fSamp_;
    }

    public static final int T_LATEST_FIELD_NUMBER = 3;
    private com.google.protobuf.Timestamp tLatest_;
    /**
     * <pre>
     * Timestamp of the last sample in linAccel
     * </pre>
     *
     * <code>.google.protobuf.Timestamp t_latest = 3;</code>
     */
    public boolean hasTLatest() {
      return tLatest_ != null;
    }
    /**
     * <pre>
     * Timestamp of the last sample in linAccel
     * </pre>
     *
     * <code>.google.protobuf.Timestamp t_latest = 3;</code>
     */
    public com.google.protobuf.Timestamp getTLatest() {
      return tLatest_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : tLatest_;
    }
    /**
     * <pre>
     * Timestamp of the last sample in linAccel
     * </pre>
     *
     * <code>.google.protobuf.Timestamp t_latest = 3;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getTLatestOrBuilder() {
      return getTLatest();
    }

    public static final int LINACCEL_X_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Float> linAccelX_;
    /**
     * <pre>
     * x-axis linear acceleration data
     * </pre>
     *
     * <code>repeated float linAccel_x = 4;</code>
     */
    public java.util.List<java.lang.Float>
        getLinAccelXList() {
      return linAccelX_;
    }
    /**
     * <pre>
     * x-axis linear acceleration data
     * </pre>
     *
     * <code>repeated float linAccel_x = 4;</code>
     */
    public int getLinAccelXCount() {
      return linAccelX_.size();
    }
    /**
     * <pre>
     * x-axis linear acceleration data
     * </pre>
     *
     * <code>repeated float linAccel_x = 4;</code>
     */
    public float getLinAccelX(int index) {
      return linAccelX_.get(index);
    }
    private int linAccelXMemoizedSerializedSize = -1;

    public static final int LINACCEL_Y_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Float> linAccelY_;
    /**
     * <pre>
     * y-axis linear acceleration data
     * </pre>
     *
     * <code>repeated float linAccel_y = 5;</code>
     */
    public java.util.List<java.lang.Float>
        getLinAccelYList() {
      return linAccelY_;
    }
    /**
     * <pre>
     * y-axis linear acceleration data
     * </pre>
     *
     * <code>repeated float linAccel_y = 5;</code>
     */
    public int getLinAccelYCount() {
      return linAccelY_.size();
    }
    /**
     * <pre>
     * y-axis linear acceleration data
     * </pre>
     *
     * <code>repeated float linAccel_y = 5;</code>
     */
    public float getLinAccelY(int index) {
      return linAccelY_.get(index);
    }
    private int linAccelYMemoizedSerializedSize = -1;

    public static final int LINACCEL_Z_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Float> linAccelZ_;
    /**
     * <pre>
     * z-axis linear acceleration data
     * </pre>
     *
     * <code>repeated float linAccel_z = 6;</code>
     */
    public java.util.List<java.lang.Float>
        getLinAccelZList() {
      return linAccelZ_;
    }
    /**
     * <pre>
     * z-axis linear acceleration data
     * </pre>
     *
     * <code>repeated float linAccel_z = 6;</code>
     */
    public int getLinAccelZCount() {
      return linAccelZ_.size();
    }
    /**
     * <pre>
     * z-axis linear acceleration data
     * </pre>
     *
     * <code>repeated float linAccel_z = 6;</code>
     */
    public float getLinAccelZ(int index) {
      return linAccelZ_.get(index);
    }
    private int linAccelZMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (watchId_ != 0) {
        output.writeInt32(1, watchId_);
      }
      if (fSamp_ != 0F) {
        output.writeFloat(2, fSamp_);
      }
      if (tLatest_ != null) {
        output.writeMessage(3, getTLatest());
      }
      if (getLinAccelXList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(linAccelXMemoizedSerializedSize);
      }
      for (int i = 0; i < linAccelX_.size(); i++) {
        output.writeFloatNoTag(linAccelX_.get(i));
      }
      if (getLinAccelYList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(linAccelYMemoizedSerializedSize);
      }
      for (int i = 0; i < linAccelY_.size(); i++) {
        output.writeFloatNoTag(linAccelY_.get(i));
      }
      if (getLinAccelZList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(linAccelZMemoizedSerializedSize);
      }
      for (int i = 0; i < linAccelZ_.size(); i++) {
        output.writeFloatNoTag(linAccelZ_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (watchId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, watchId_);
      }
      if (fSamp_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, fSamp_);
      }
      if (tLatest_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTLatest());
      }
      {
        int dataSize = 0;
        dataSize = 4 * getLinAccelXList().size();
        size += dataSize;
        if (!getLinAccelXList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        linAccelXMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getLinAccelYList().size();
        size += dataSize;
        if (!getLinAccelYList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        linAccelYMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getLinAccelZList().size();
        size += dataSize;
        if (!getLinAccelZList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        linAccelZMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof posepair.WatchData.WatchDataBlock)) {
        return super.equals(obj);
      }
      posepair.WatchData.WatchDataBlock other = (posepair.WatchData.WatchDataBlock) obj;

      boolean result = true;
      result = result && (getWatchId()
          == other.getWatchId());
      result = result && (
          java.lang.Float.floatToIntBits(getFSamp())
          == java.lang.Float.floatToIntBits(
              other.getFSamp()));
      result = result && (hasTLatest() == other.hasTLatest());
      if (hasTLatest()) {
        result = result && getTLatest()
            .equals(other.getTLatest());
      }
      result = result && getLinAccelXList()
          .equals(other.getLinAccelXList());
      result = result && getLinAccelYList()
          .equals(other.getLinAccelYList());
      result = result && getLinAccelZList()
          .equals(other.getLinAccelZList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + WATCH_ID_FIELD_NUMBER;
      hash = (53 * hash) + getWatchId();
      hash = (37 * hash) + F_SAMP_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getFSamp());
      if (hasTLatest()) {
        hash = (37 * hash) + T_LATEST_FIELD_NUMBER;
        hash = (53 * hash) + getTLatest().hashCode();
      }
      if (getLinAccelXCount() > 0) {
        hash = (37 * hash) + LINACCEL_X_FIELD_NUMBER;
        hash = (53 * hash) + getLinAccelXList().hashCode();
      }
      if (getLinAccelYCount() > 0) {
        hash = (37 * hash) + LINACCEL_Y_FIELD_NUMBER;
        hash = (53 * hash) + getLinAccelYList().hashCode();
      }
      if (getLinAccelZCount() > 0) {
        hash = (37 * hash) + LINACCEL_Z_FIELD_NUMBER;
        hash = (53 * hash) + getLinAccelZList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static posepair.WatchData.WatchDataBlock parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static posepair.WatchData.WatchDataBlock parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static posepair.WatchData.WatchDataBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static posepair.WatchData.WatchDataBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static posepair.WatchData.WatchDataBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static posepair.WatchData.WatchDataBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static posepair.WatchData.WatchDataBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static posepair.WatchData.WatchDataBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static posepair.WatchData.WatchDataBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static posepair.WatchData.WatchDataBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static posepair.WatchData.WatchDataBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static posepair.WatchData.WatchDataBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(posepair.WatchData.WatchDataBlock prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * WatchDataBlock encodes a block of sensor data from the watch, together with all relevant sensor attributes (watch ID, sampling freq, timestamp...)
     * </pre>
     *
     * Protobuf type {@code posepair.WatchDataBlock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:posepair.WatchDataBlock)
        posepair.WatchData.WatchDataBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return posepair.WatchData.internal_static_posepair_WatchDataBlock_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return posepair.WatchData.internal_static_posepair_WatchDataBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                posepair.WatchData.WatchDataBlock.class, posepair.WatchData.WatchDataBlock.Builder.class);
      }

      // Construct using posepair.WatchData.WatchDataBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        watchId_ = 0;

        fSamp_ = 0F;

        if (tLatestBuilder_ == null) {
          tLatest_ = null;
        } else {
          tLatest_ = null;
          tLatestBuilder_ = null;
        }
        linAccelX_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        linAccelY_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        linAccelZ_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return posepair.WatchData.internal_static_posepair_WatchDataBlock_descriptor;
      }

      public posepair.WatchData.WatchDataBlock getDefaultInstanceForType() {
        return posepair.WatchData.WatchDataBlock.getDefaultInstance();
      }

      public posepair.WatchData.WatchDataBlock build() {
        posepair.WatchData.WatchDataBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public posepair.WatchData.WatchDataBlock buildPartial() {
        posepair.WatchData.WatchDataBlock result = new posepair.WatchData.WatchDataBlock(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.watchId_ = watchId_;
        result.fSamp_ = fSamp_;
        if (tLatestBuilder_ == null) {
          result.tLatest_ = tLatest_;
        } else {
          result.tLatest_ = tLatestBuilder_.build();
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          linAccelX_ = java.util.Collections.unmodifiableList(linAccelX_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.linAccelX_ = linAccelX_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          linAccelY_ = java.util.Collections.unmodifiableList(linAccelY_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.linAccelY_ = linAccelY_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          linAccelZ_ = java.util.Collections.unmodifiableList(linAccelZ_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.linAccelZ_ = linAccelZ_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof posepair.WatchData.WatchDataBlock) {
          return mergeFrom((posepair.WatchData.WatchDataBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(posepair.WatchData.WatchDataBlock other) {
        if (other == posepair.WatchData.WatchDataBlock.getDefaultInstance()) return this;
        if (other.getWatchId() != 0) {
          setWatchId(other.getWatchId());
        }
        if (other.getFSamp() != 0F) {
          setFSamp(other.getFSamp());
        }
        if (other.hasTLatest()) {
          mergeTLatest(other.getTLatest());
        }
        if (!other.linAccelX_.isEmpty()) {
          if (linAccelX_.isEmpty()) {
            linAccelX_ = other.linAccelX_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureLinAccelXIsMutable();
            linAccelX_.addAll(other.linAccelX_);
          }
          onChanged();
        }
        if (!other.linAccelY_.isEmpty()) {
          if (linAccelY_.isEmpty()) {
            linAccelY_ = other.linAccelY_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureLinAccelYIsMutable();
            linAccelY_.addAll(other.linAccelY_);
          }
          onChanged();
        }
        if (!other.linAccelZ_.isEmpty()) {
          if (linAccelZ_.isEmpty()) {
            linAccelZ_ = other.linAccelZ_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureLinAccelZIsMutable();
            linAccelZ_.addAll(other.linAccelZ_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        posepair.WatchData.WatchDataBlock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (posepair.WatchData.WatchDataBlock) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int watchId_ ;
      /**
       * <pre>
       * Watch unique id (to tell them apart)
       * </pre>
       *
       * <code>int32 watch_id = 1;</code>
       */
      public int getWatchId() {
        return watchId_;
      }
      /**
       * <pre>
       * Watch unique id (to tell them apart)
       * </pre>
       *
       * <code>int32 watch_id = 1;</code>
       */
      public Builder setWatchId(int value) {
        
        watchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Watch unique id (to tell them apart)
       * </pre>
       *
       * <code>int32 watch_id = 1;</code>
       */
      public Builder clearWatchId() {
        
        watchId_ = 0;
        onChanged();
        return this;
      }

      private float fSamp_ ;
      /**
       * <pre>
       * Frequency at which values were sampled
       * </pre>
       *
       * <code>float F_samp = 2;</code>
       */
      public float getFSamp() {
        return fSamp_;
      }
      /**
       * <pre>
       * Frequency at which values were sampled
       * </pre>
       *
       * <code>float F_samp = 2;</code>
       */
      public Builder setFSamp(float value) {
        
        fSamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Frequency at which values were sampled
       * </pre>
       *
       * <code>float F_samp = 2;</code>
       */
      public Builder clearFSamp() {
        
        fSamp_ = 0F;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp tLatest_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> tLatestBuilder_;
      /**
       * <pre>
       * Timestamp of the last sample in linAccel
       * </pre>
       *
       * <code>.google.protobuf.Timestamp t_latest = 3;</code>
       */
      public boolean hasTLatest() {
        return tLatestBuilder_ != null || tLatest_ != null;
      }
      /**
       * <pre>
       * Timestamp of the last sample in linAccel
       * </pre>
       *
       * <code>.google.protobuf.Timestamp t_latest = 3;</code>
       */
      public com.google.protobuf.Timestamp getTLatest() {
        if (tLatestBuilder_ == null) {
          return tLatest_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : tLatest_;
        } else {
          return tLatestBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Timestamp of the last sample in linAccel
       * </pre>
       *
       * <code>.google.protobuf.Timestamp t_latest = 3;</code>
       */
      public Builder setTLatest(com.google.protobuf.Timestamp value) {
        if (tLatestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tLatest_ = value;
          onChanged();
        } else {
          tLatestBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp of the last sample in linAccel
       * </pre>
       *
       * <code>.google.protobuf.Timestamp t_latest = 3;</code>
       */
      public Builder setTLatest(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (tLatestBuilder_ == null) {
          tLatest_ = builderForValue.build();
          onChanged();
        } else {
          tLatestBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp of the last sample in linAccel
       * </pre>
       *
       * <code>.google.protobuf.Timestamp t_latest = 3;</code>
       */
      public Builder mergeTLatest(com.google.protobuf.Timestamp value) {
        if (tLatestBuilder_ == null) {
          if (tLatest_ != null) {
            tLatest_ =
              com.google.protobuf.Timestamp.newBuilder(tLatest_).mergeFrom(value).buildPartial();
          } else {
            tLatest_ = value;
          }
          onChanged();
        } else {
          tLatestBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp of the last sample in linAccel
       * </pre>
       *
       * <code>.google.protobuf.Timestamp t_latest = 3;</code>
       */
      public Builder clearTLatest() {
        if (tLatestBuilder_ == null) {
          tLatest_ = null;
          onChanged();
        } else {
          tLatest_ = null;
          tLatestBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp of the last sample in linAccel
       * </pre>
       *
       * <code>.google.protobuf.Timestamp t_latest = 3;</code>
       */
      public com.google.protobuf.Timestamp.Builder getTLatestBuilder() {
        
        onChanged();
        return getTLatestFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Timestamp of the last sample in linAccel
       * </pre>
       *
       * <code>.google.protobuf.Timestamp t_latest = 3;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getTLatestOrBuilder() {
        if (tLatestBuilder_ != null) {
          return tLatestBuilder_.getMessageOrBuilder();
        } else {
          return tLatest_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : tLatest_;
        }
      }
      /**
       * <pre>
       * Timestamp of the last sample in linAccel
       * </pre>
       *
       * <code>.google.protobuf.Timestamp t_latest = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getTLatestFieldBuilder() {
        if (tLatestBuilder_ == null) {
          tLatestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getTLatest(),
                  getParentForChildren(),
                  isClean());
          tLatest_ = null;
        }
        return tLatestBuilder_;
      }

      private java.util.List<java.lang.Float> linAccelX_ = java.util.Collections.emptyList();
      private void ensureLinAccelXIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          linAccelX_ = new java.util.ArrayList<java.lang.Float>(linAccelX_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * x-axis linear acceleration data
       * </pre>
       *
       * <code>repeated float linAccel_x = 4;</code>
       */
      public java.util.List<java.lang.Float>
          getLinAccelXList() {
        return java.util.Collections.unmodifiableList(linAccelX_);
      }
      /**
       * <pre>
       * x-axis linear acceleration data
       * </pre>
       *
       * <code>repeated float linAccel_x = 4;</code>
       */
      public int getLinAccelXCount() {
        return linAccelX_.size();
      }
      /**
       * <pre>
       * x-axis linear acceleration data
       * </pre>
       *
       * <code>repeated float linAccel_x = 4;</code>
       */
      public float getLinAccelX(int index) {
        return linAccelX_.get(index);
      }
      /**
       * <pre>
       * x-axis linear acceleration data
       * </pre>
       *
       * <code>repeated float linAccel_x = 4;</code>
       */
      public Builder setLinAccelX(
          int index, float value) {
        ensureLinAccelXIsMutable();
        linAccelX_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * x-axis linear acceleration data
       * </pre>
       *
       * <code>repeated float linAccel_x = 4;</code>
       */
      public Builder addLinAccelX(float value) {
        ensureLinAccelXIsMutable();
        linAccelX_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * x-axis linear acceleration data
       * </pre>
       *
       * <code>repeated float linAccel_x = 4;</code>
       */
      public Builder addAllLinAccelX(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureLinAccelXIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, linAccelX_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * x-axis linear acceleration data
       * </pre>
       *
       * <code>repeated float linAccel_x = 4;</code>
       */
      public Builder clearLinAccelX() {
        linAccelX_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Float> linAccelY_ = java.util.Collections.emptyList();
      private void ensureLinAccelYIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          linAccelY_ = new java.util.ArrayList<java.lang.Float>(linAccelY_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       * y-axis linear acceleration data
       * </pre>
       *
       * <code>repeated float linAccel_y = 5;</code>
       */
      public java.util.List<java.lang.Float>
          getLinAccelYList() {
        return java.util.Collections.unmodifiableList(linAccelY_);
      }
      /**
       * <pre>
       * y-axis linear acceleration data
       * </pre>
       *
       * <code>repeated float linAccel_y = 5;</code>
       */
      public int getLinAccelYCount() {
        return linAccelY_.size();
      }
      /**
       * <pre>
       * y-axis linear acceleration data
       * </pre>
       *
       * <code>repeated float linAccel_y = 5;</code>
       */
      public float getLinAccelY(int index) {
        return linAccelY_.get(index);
      }
      /**
       * <pre>
       * y-axis linear acceleration data
       * </pre>
       *
       * <code>repeated float linAccel_y = 5;</code>
       */
      public Builder setLinAccelY(
          int index, float value) {
        ensureLinAccelYIsMutable();
        linAccelY_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * y-axis linear acceleration data
       * </pre>
       *
       * <code>repeated float linAccel_y = 5;</code>
       */
      public Builder addLinAccelY(float value) {
        ensureLinAccelYIsMutable();
        linAccelY_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * y-axis linear acceleration data
       * </pre>
       *
       * <code>repeated float linAccel_y = 5;</code>
       */
      public Builder addAllLinAccelY(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureLinAccelYIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, linAccelY_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * y-axis linear acceleration data
       * </pre>
       *
       * <code>repeated float linAccel_y = 5;</code>
       */
      public Builder clearLinAccelY() {
        linAccelY_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Float> linAccelZ_ = java.util.Collections.emptyList();
      private void ensureLinAccelZIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          linAccelZ_ = new java.util.ArrayList<java.lang.Float>(linAccelZ_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <pre>
       * z-axis linear acceleration data
       * </pre>
       *
       * <code>repeated float linAccel_z = 6;</code>
       */
      public java.util.List<java.lang.Float>
          getLinAccelZList() {
        return java.util.Collections.unmodifiableList(linAccelZ_);
      }
      /**
       * <pre>
       * z-axis linear acceleration data
       * </pre>
       *
       * <code>repeated float linAccel_z = 6;</code>
       */
      public int getLinAccelZCount() {
        return linAccelZ_.size();
      }
      /**
       * <pre>
       * z-axis linear acceleration data
       * </pre>
       *
       * <code>repeated float linAccel_z = 6;</code>
       */
      public float getLinAccelZ(int index) {
        return linAccelZ_.get(index);
      }
      /**
       * <pre>
       * z-axis linear acceleration data
       * </pre>
       *
       * <code>repeated float linAccel_z = 6;</code>
       */
      public Builder setLinAccelZ(
          int index, float value) {
        ensureLinAccelZIsMutable();
        linAccelZ_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * z-axis linear acceleration data
       * </pre>
       *
       * <code>repeated float linAccel_z = 6;</code>
       */
      public Builder addLinAccelZ(float value) {
        ensureLinAccelZIsMutable();
        linAccelZ_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * z-axis linear acceleration data
       * </pre>
       *
       * <code>repeated float linAccel_z = 6;</code>
       */
      public Builder addAllLinAccelZ(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureLinAccelZIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, linAccelZ_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * z-axis linear acceleration data
       * </pre>
       *
       * <code>repeated float linAccel_z = 6;</code>
       */
      public Builder clearLinAccelZ() {
        linAccelZ_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:posepair.WatchDataBlock)
    }

    // @@protoc_insertion_point(class_scope:posepair.WatchDataBlock)
    private static final posepair.WatchData.WatchDataBlock DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new posepair.WatchData.WatchDataBlock();
    }

    public static posepair.WatchData.WatchDataBlock getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WatchDataBlock>
        PARSER = new com.google.protobuf.AbstractParser<WatchDataBlock>() {
      public WatchDataBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WatchDataBlock(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WatchDataBlock> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WatchDataBlock> getParserForType() {
      return PARSER;
    }

    public posepair.WatchData.WatchDataBlock getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_posepair_WatchDataBlock_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_posepair_WatchDataBlock_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020watch_data.proto\022\010posepair\032\033google/pro" +
      "tobuf/empty.proto\032\037google/protobuf/times" +
      "tamp.proto\"\234\001\n\016WatchDataBlock\022\020\n\010watch_i" +
      "d\030\001 \001(\005\022\016\n\006F_samp\030\002 \001(\002\022,\n\010t_latest\030\003 \001(" +
      "\0132\032.google.protobuf.Timestamp\022\022\n\nlinAcce" +
      "l_x\030\004 \003(\002\022\022\n\nlinAccel_y\030\005 \003(\002\022\022\n\nlinAcce" +
      "l_z\030\006 \003(\0022\\\n\021WatchDataReceiver\022G\n\017Stream" +
      "WatchData\022\030.posepair.WatchDataBlock\032\026.go" +
      "ogle.protobuf.Empty\"\000(\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.EmptyProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
        }, assigner);
    internal_static_posepair_WatchDataBlock_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_posepair_WatchDataBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_posepair_WatchDataBlock_descriptor,
        new java.lang.String[] { "WatchId", "FSamp", "TLatest", "LinAccelX", "LinAccelY", "LinAccelZ", });
    com.google.protobuf.EmptyProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
